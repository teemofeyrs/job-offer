{"version":3,"sources":["redux/reducers/profileReducers.js","components/reusable components/checkbox/Checkbox.jsx","apiDAL/api.js","redux/reducers/messagesReducers.js","redux/reducers/userProfileReducers/userProfileReducers.js","components/Content/contentElem/Companies/Companies.module.css","components/Content/contentElem/Projects/Projects.module.css","components/Content/contentElem/Profiles/Profiles.module.css","components/Content/contentElem/Profiles/Users.module.css","components/Content/Parts/Preloader/classesPreloader.module.css","assets/img/Spinner-1s-304px.png","components/Content/contentElem/Jobs/Jobs.module.css","components/reusable components/icon/Icon.jsx","redux/selectors/selectors.js","components/Header/logoSearch/LogoSearch.jsx","components/Header/navigation/DropSettings/DropSettings.jsx","components/Header/navigation/Navigation.jsx","redux/reducers/appRedusers.js","redux/reducers/authorizationReducers.js","components/Header/navigation/NavigationContainer.jsx","components/Header/Header.jsx","components/Content/contentElem/Companies/Companies.jsx","components/Content/contentElem/Projects/Projects.jsx","redux/reducers/usersReducers.js","components/Content/contentElem/Profiles/User.jsx","components/Content/contentElem/Profiles/pagination/Pagination.jsx","components/Content/contentElem/Profiles/UsersContainerAPI.jsx","components/Content/contentElem/Profiles/Profiles.jsx","components/Content/contentElem/Jobs/Jobs.jsx","components/reusable components/tabBar/TabBarNav.jsx","components/reusable components/tabBar/TabBar.jsx","components/reusable components/tabBar/TabBarItem.jsx","components/reusable components/button/Button.jsx","components/Auth/loginPageContainer/LoginPage/loginForm/LoginForm.jsx","components/Auth/loginPageContainer/LoginPage/loginForm/LoginFormContainer.jsx","components/Auth/loginPageContainer/LoginPage/logOutForm/SignUpForm.jsx","components/Auth/loginPageContainer/Login.jsx","components/Auth/loginPageContainer/LoginPage/LoginPage.jsx","components/Auth/AuthMeContainer/AuthMeContainer.jsx","components/Auth/AuthMe.jsx","App.js","serviceWorker.js","redux/rudux-store.js","index.js","components/Content/contentElem/Profiles/User.module.css","components/Auth/loginPageContainer/LoginPage/LoginPage.module.css","components/Content/Parts/Preloader/Preloader.jsx","assets/img/no-profile.png","components/Header/navigation/Navigation.module.css","components/Content/contentElem/Profiles/pagination/Pagination.module.css","HOC/authRedirect.js","redux/reducers/myProfileReducers.js","components/reusable components/input/Input.jsx","tools/validators/validate.js","components/Header/navigation/DropSettings/DropSettings.module.css","components/Header/logoSearch/LogoSearch.module.css","components/Header/Header.module.css"],"names":["AddPostAC","postText","type","SetStatus","status","profileStatusInit","id","dispatch","a","ProfileApi","getStatus","response","data","changeStatusOnApi","newStatus","setStatus","resultCode","initialState","posts","img","name","textPost","likes","comments","views","newPostText","userStatus","profileReducers","state","action","stateCopy","newPost","unshift","Checkbox","input","label","className","meta","touched","error","warning","style","classNames","placeholder","instanceApi","axios","baseURL","withCredentials","headers","AuthApi","authMe","get","login","email","password","rememberMe","captcha","post","logout","delete","getCapthaUrl","UsersApi","getUsers","pageSize","currentUserPage","then","Follow","unFollow","getProfile","userId","profileId","put","uploadPhoto","file","formData","FormData","append","editDataProfile","profile","OnMessageChangeCreator","text","AddMessageCreator","initialMessage","messageData","massage","dialogs","newMessageText","messagesReducers","message","push","userInfo","userInit","userProfileReducers","module","exports","Icon","size","onClick","disabled","attrs","classes","func","elemSize","fontSize","defaultProps","getIsAuth","auth","isAuth","getMyId","getCaptchaSelec","getMyInfo","myInfo","gerInitApp","appInit","initApp","getProfileStatus","profilePage","getPosts","getNewPostText","getUserProfileInfo","user","LogoSearch","classesLogo","logoSearch","logoDescription","DropSettings","props","userAccountSett","usLinks","to","logOut","Navigation","useState","toggleMenu","setToggleMenu","classesNav","navigation","e","preventDefault","toggleBtn","shotToggleMenu","toggleSettings","src","photos","small","noProfile","alt","fullName","initializationRedusers","captchaUrl","authorizationReducers","url","NavigationContainer","this","React","Component","compose","connect","AuthRedirect","Header","classesHeader","header","wrapper","Companies","classesCompanies","companies","Projects","classesProjects","projects","followUser","unFollowUser","isFetchingChange","boolean","isFetching","followingProgress","users","totalUsersCount","currentPage","followingInProgress","foolowUnfollowSacces","ApiMethod","actionOfFollowed","usersReducers","map","us","followed","hire","totalCount","filter","User","follow","classesUser","container","main","addressImg","some","mail","view","viewProfile","Pagination","onPageChanged","portionNumber","setPortionNumber","itemCount","Math","ceil","portionCount","leftPortionBorder","rightPortionBorder","pages","i","classesPagination","pagination","arrowButton","p","UsersClass","page","setCurrentUserPage","u","Preloader","undefined","classesUsers","UsersContainer","usersPage","hireUser","items","Profiles","classesProfiles","UsersContainerAPI","Jobs","classesJobs","jobs","TabBarNav","navLabel","onChangeActiveTab","TabBar","activeTab","getChildrenLabels","children","setActiveTab","setState","renderTabs","key","active","vertical","Children","child","cloneElement","TabBarItem","Button","attr","styles","Tag","href","toString","LoginFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","Input","validate","required","value","maxLength8","messages","length","stopSubmit","_error","console","log","LoginOutForm","Login","LoginPage","classLoginPage","mainField","article","logo","info","bannerImg","loginField","AuthMeContainer","prevProps","prevState","snapshot","AuthMe","Mass","lazy","UserProfile","Home","App","setToggleSettings","target","toInitialize","indificateMe","myId","path","exact","fallback","PureComponent","promiseAuth","Promise","all","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","immutable","Immutable","reducers","combineReducers","appRedusers","messagePage","formReducer","myProfileReducers","store","createStore","applyMiddleware","thunkMiddleware","MainApp","StrictMode","rerenderEntireTree","ReactDOM","render","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","classesPreloader","preloader","spinner","mapSateToProps","WithRedirection","userID","updatePhoto","photoFile","updateDataProfile","getState","reject","htmlFor","maxLength","max","maxLength100"],"mappings":"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","file":"static/js/main.fbbc5458.chunk.js","sourcesContent":["import {ProfileApi} from \"../../apiDAL/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n/*const ON_POST_CHANGE = 'ON-POST-TEXT-CHANGE';*/\r\nconst PROFILE_SET_STATUS = 'profile/SET_STATUS';\r\n\r\n/* action creator*/\r\nexport let AddPostAC = (postText) => {\r\n    return {type: ADD_POST, postText};\r\n};\r\n/*export let OnPostChange = (text) => {\r\n    return {type: ON_POST_CHANGE, text: text};\r\n};*/\r\nexport let SetStatus = (status) => {\r\n    return{\r\n        type: PROFILE_SET_STATUS, status\r\n    }\r\n}\r\n/* redux thunk*/\r\nexport const profileStatusInit = (id) => async (dispatch) => {\r\n    let response = await ProfileApi.getStatus(id);\r\n    dispatch(SetStatus(response.data));\r\n}\r\nexport const changeStatusOnApi = (newStatus) => async (dispatch) => {\r\n    let response = await ProfileApi.setStatus(newStatus);\r\n    if(response.data.resultCode === 0) dispatch(SetStatus(newStatus));\r\n};\r\n\r\n/* initial state*/\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id:1,\r\n            img: 'https://keenthemes.com/preview/metronic/theme/assets/pages/media/profile/profile_user.jpg',\r\n            name: 'John Doe',\r\n            textPost: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been\\n' +\r\n                '                    the\\n' +\r\n                '                    industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of\\n' +\r\n                '                    type\\n' +\r\n                '                    and scrambled it to make a type specimen book.',\r\n            likes: 25,\r\n            comments: 15,\r\n            views: 35\r\n        },\r\n        {\r\n            id:2,\r\n            img: 'https://keenthemes.com/preview/metronic/theme/assets/pages/media/profile/profile_user.jpg',\r\n            name: 'John Doe',\r\n            textPost: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been,',\r\n            likes: 25,\r\n            comments: 15,\r\n            views: 35\r\n        }\r\n    ],\r\n    newPostText: 'post text',\r\n    userStatus: null,\r\n};\r\n\r\n\r\nconst profileReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            if(!action.postText) return state;\r\n            let stateCopy = {...state};\r\n                stateCopy.posts = [...state.posts];\r\n            let newPost = {\r\n                id: action.postText,\r\n                img: 'https://keenthemes.com/preview/metronic/theme/assets/pages/media/profile/profile_user.jpg',\r\n                name: 'John Doe',\r\n                textPost: action.postText,\r\n                likes: 0,\r\n                comments: 0,\r\n                views: 0\r\n            };\r\n            stateCopy.posts.unshift(newPost);\r\n            stateCopy.newPostText = '';\r\n            return stateCopy;\r\n       /* case ON_POST_CHANGE:\r\n        {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText = action.text;\r\n            return stateCopy;\r\n        }*/\r\n        case PROFILE_SET_STATUS: {\r\n            return {\r\n                ...state, userStatus: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default profileReducers;","import React from \"react\";\r\nimport './Checkbox.css';\r\nimport classNames from 'classnames';\r\n\r\nexport const Checkbox = ({input, label, type, className,  meta: {touched, error, warning} }) => {\r\n    let style = classNames(\r\n        'checkbox',\r\n        className\r\n    )\r\n    return (<div className={\"checkboxContainer\"}>\r\n        <label>{label}\r\n            <div>\r\n                <input className={style} {...input} placeholder={label} type={type}/>\r\n                {touched &&\r\n                ((error && <span>{error}</span>) ||\r\n                    (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </label>\r\n\r\n    </div>)\r\n};\r\n","import * as axios from \"axios\";\r\n\r\nconst instanceApi = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '475a789d-1cf1-4bda-95ce-1e82f04fdbc7'}\r\n});\r\n\r\nexport const AuthApi =  {\r\n    authMe() {\r\n       return  instanceApi.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha){\r\n        return instanceApi.post('auth/login', {email, password, rememberMe, captcha});\r\n    },\r\n    logout(){\r\n        return instanceApi.delete('auth/login');\r\n    },\r\n    getCapthaUrl(){\r\n      return instanceApi.get('security/get-captcha-url');\r\n    }\r\n}\r\nexport const UsersApi = {\r\n    getUsers(pageSize, currentUserPage){\r\n        return  instanceApi.get(`users?count=${pageSize}&page=${currentUserPage}`).then(response => response);\r\n    },\r\n    Follow(id) {\r\n        return instanceApi.post(`follow/${id}`).then(response => response.data);\r\n    },\r\n    unFollow(id) {\r\n        return instanceApi.delete(`follow/${id}`).then(response => response.data);\r\n    }\r\n\r\n}\r\nexport const ProfileApi = {\r\n    getProfile(userId){\r\n        return  instanceApi.get(`profile/${userId}`);\r\n    },\r\n    getStatus(profileId){\r\n        return instanceApi.get(`profile/status/${profileId}`)\r\n    },\r\n    setStatus(newStatus){\r\n        debugger\r\n        return instanceApi.put(`profile/status/`, {status : newStatus})\r\n    },\r\n    uploadPhoto(file){\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        return instanceApi.put(`profile/photo`,  formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    editDataProfile(profile){\r\n        return  instanceApi.put(`profile/`, profile);\r\n    },\r\n}","const ON_MESSAGE_CHANGE = 'ON-MESSAGE-TEXT-CHANGE';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nexport let OnMessageChangeCreator = (text) => {\r\n    return { type: ON_MESSAGE_CHANGE, text: text}\r\n};\r\nexport let AddMessageCreator = () => {\r\n    return { type: ADD_MESSAGE}\r\n};\r\nlet initialMessage = {\r\n    messageData: [\r\n        {\r\n            id: 1,\r\n            img: 'https://keenthemes.com/preview/metronic/theme/assets/pages/media/profile/profile_user.jpg',\r\n            massage: 'Lorem idivsum dolor sit amet, consectetur adidivisicing elit. Aliquid asdiveriores earum, fuga labore\\n' +\r\n                '                        officiis quisquam\\n' +\r\n                '                        sunt?'\r\n        },\r\n        {\r\n            id: 2,\r\n            img: 'https://cxl.com/wp-content/uploads/2016/03/nate_munger.png',\r\n            massage: 'Lorem idivsum dolor sit amet, consectetur adidivisicing elit. Adidivisci, blanditiis debitis, harum,\\n' +\r\n                '                        illo idivsa\\n' +\r\n                '                         Asdivernatur\\n' +\r\n                '                        dolorem\\n' +\r\n                '                        quibusdam vero? Libero, ullam.'\r\n        },\r\n        {\r\n            id: 2,\r\n            img: 'https://cxl.com/wp-content/uploads/2016/03/nate_munger.png',\r\n            massage: 'Lorem idivsum dolor sit amet, consectetur adidivisicing elit.'\r\n        },\r\n        {\r\n            id: 1,\r\n            img: 'https://keenthemes.com/preview/metronic/theme/assets/pages/media/profile/profile_user.jpg',\r\n            massage: 'Lorem idivsum dolor sit amet, consectetur adidivisicing elit. Aliquid asdiveriores earum, fuga labore officia divorro divossimus divrovident quas quasi temdivoribus ? '\r\n        },\r\n    ],\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            img: 'https://keenthemes.com/preview/metronic/theme/assets/pages/media/profile/profile_user.jpg',\r\n            name: 'John Doe'\r\n        },\r\n        {\r\n            id: 2,\r\n            img: \"https://cxl.com/wp-content/uploads/2016/03/nate_munger.png\",\r\n            name: 'Dimych'\r\n        },\r\n        {\r\n            id: 3,\r\n            img: 'https://s3.amazonaws.com/37assets/svn/1024-original.1e9af38097008ef9573f03b03ef6f363219532f9.jpg',\r\n            name: 'Yura'\r\n        },\r\n        {\r\n            id: 4,\r\n            img: 'https://dcavozvb40vtt.cloudfront.net/api/file/0ubAiutLQU2XjZSGvd37',\r\n            name: 'Misha'\r\n        },\r\n        {\r\n            id: 5,\r\n            img: 'https://fedspendingtransparency.github.io/assets/img/user_personas/journalist_mug.jpg',\r\n            name: 'Alina'\r\n        },\r\n        {\r\n            id: 6,\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT0AIdmvnkOh4_odOdtEMSWJTjU7R41kPjbVOOyOK9euu9ENhKJ&usqp=CAU',\r\n            name: 'Natasha'\r\n        },\r\n        {\r\n            id: 7,\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTny0zZ6Fxf3YtRhIi0bNmQ1tmqS8MkQasEi2xmcpAPxqmYdw04&usqp=CAU',\r\n            name: 'Elizabet'\r\n        },\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nconst messagesReducers = (state = initialMessage, action) => {\r\n    switch (action.type) {\r\n        case ON_MESSAGE_CHANGE:\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText = action.text;\r\n            return stateCopy;\r\n        case ADD_MESSAGE: {\r\n            debugger;\r\n            let stateCopy = {...state};\r\n            stateCopy.messageData = [...state.messageData];\r\n            let message = {\r\n                id: 1,\r\n                img: 'https://keenthemes.com/preview/metronic/theme/assets/pages/media/profile/profile_user.jpg',\r\n                massage: state.newPostText\r\n            };\r\n            stateCopy.messageData.push(message);\r\n            stateCopy.newPostText = '';\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default messagesReducers;","import {ProfileApi} from \"../../../apiDAL/api\";\r\nconst PROFILE_SET_USER = 'profile/SET_USER';\r\n\r\n\r\n/* action creator*/\r\nexport let SetUser = (userInfo) => {\r\n    return{\r\n        type: PROFILE_SET_USER, userInfo\r\n    }\r\n}\r\n\r\n/* initial state*/\r\nconst initialState = {\r\n    userInfo: [],\r\n}\r\n/* redux thunk*/\r\nexport const userInit = (id) => (dispatch) => {\r\n    ProfileApi.getProfile(id).then( response => {\r\n        dispatch(SetUser(response.data));\r\n    })\r\n}\r\n/*reducer*/\r\nconst userProfileReducers = (state= initialState, action) =>{\r\n    switch (action.type) {\r\n        case PROFILE_SET_USER: {\r\n            return{\r\n                ...state, userInfo : action.userInfo,\r\n            }\r\n        }\r\n        default:\r\n        {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport default userProfileReducers;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companies\":\"Companies_companies__30aWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"Projects_projects__2YpsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profiles_profile__3_LUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__Yrxho\",\"span\":\"Users_span__1RuZc\",\"currentUser\":\"Users_currentUser__xLwCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"classesPreloader_preloader__2qqU-\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-304px.ed2f17c6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jobs\":\"Jobs_jobs__3fVfq\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Icon.css';\r\n\r\nconst Icon = ({ name, className, size, onClick, disabled, ...attrs }) => {\r\n    const classes = classNames(\r\n        'fa',\r\n        `fa-${name}`,\r\n        { func: onClick },\r\n        { disabled },\r\n        className,\r\n    );\r\n\r\n    const elemSize = size ? { fontSize: `${size}rem` } : null;\r\n\r\n    return (\r\n        <i\r\n            {...attrs}\r\n            className={classes}\r\n            onClick={disabled ? null : onClick}\r\n            style={elemSize}\r\n        />\r\n    );\r\n};\r\n\r\nIcon.propTypes = {\r\n    name: PropTypes.string,\r\n    className: PropTypes.string,\r\n    size: PropTypes.number,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n};\r\n\r\nIcon.defaultProps = {\r\n    name: '',\r\n    className: '',\r\n    size: null,\r\n    onClick: null,\r\n    disabled: false,\r\n};\r\n\r\nexport default Icon;","/* authorization selectors*/\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n};\r\nexport const getMyId = (state) => {\r\n    return state.auth.id;\r\n};\r\nexport const getCaptchaSelec = (state) => {\r\n    return state.auth.captcha;\r\n};\r\n\r\n/* myInfo selectors*/\r\nexport const getFullName = (state) => {\r\n    return state.myInfo.fullName;\r\n};\r\nexport const getMyInfo = (state) => {\r\n    return {...state.myInfo};\r\n};\r\n\r\n/* app selectors*/\r\nexport const gerInitApp = (state) => {\r\n    return state.appInit.initApp;\r\n}\r\n\r\n/* profile selectors*/\r\nexport const getProfileStatus = (state) => {\r\n    return state.profilePage.userStatus;\r\n}\r\nexport const getPosts = (state) => {\r\n    return state.profilePage.posts;\r\n}\r\nexport  const getNewPostText = (state) => {\r\n    return state.profilePage.newPostText;\r\n}\r\n/* users selectors*/\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n/*user profile selectors*/\r\nexport const getUserProfileInfo = (state) => {\r\n    return state.user.userInfo;\r\n}","import React from 'react'\r\nimport classesLogo from './LogoSearch.module.css'\r\n\r\nconst LogoSearch = () => {\r\n    return (\r\n        <div className={classesLogo.logoSearch}>\r\n            <p className={classesLogo.logoDescription}>Job&nbsp;<span>|</span>&nbsp;Offer</p>\r\n        </div>\r\n    );\r\n}\r\nexport default LogoSearch;","import React from \"react\";\r\nimport classes from \"./DropSettings.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DropSettings = (props) => {\r\n    return (\r\n        <div className={classes.userAccountSett}>\r\n            <h3>Account Setting</h3>\r\n            <ul className={classes.usLinks}>\r\n                <li><NavLink to='/account-settings'>Account Settings</NavLink></li>\r\n                <li><NavLink to='/privacy'>Privacy</NavLink></li>\r\n                <li><NavLink to='/faqs'>Faqs</NavLink></li>\r\n            </ul>\r\n            <h3 className={classes.logout} onClick={() => {\r\n                props.logOut()}}>Logout</h3>\r\n        </div>)\r\n};\r\nexport default DropSettings;\r\n","import React, { Fragment, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classesNav from './Navigation.module.css'\r\nimport noProfile from './../../../assets/img/no-profile.png'\r\nimport DropSettings from './DropSettings/DropSettings'\r\nimport Icon from '../../reusable components/icon/Icon'\r\n\r\nconst Navigation = (props) => {\r\n    let [toggleMenu , setToggleMenu] = useState(false);\r\n    let toggelMenu = (e) => {\r\n        e.preventDefault();\r\n        setToggleMenu( true );\r\n\r\n    }\r\n    return (\r\n            <nav className={classesNav.navigation}>\r\n                <button onClick={toggelMenu} id='toggleBtn' className={classesNav.toggleBtn}><Icon name={'bars'}/></button>\r\n                {toggleMenu && <div className={classesNav.shotToggleMenu}>\r\n                    <ul onClick={() => setToggleMenu(false)}>\r\n                        <li><NavLink  to=\"/\">Home</NavLink ></li>\r\n                        <li><NavLink  to=\"/companies\">Companies</NavLink ></li>\r\n                        <li><NavLink  to=\"/projects\">Progects</NavLink></li>\r\n                        <li><NavLink  to=\"/profiles\">Profiles</NavLink></li>\r\n                        <li><NavLink  to=\"/jobs\">Jobs</NavLink></li>\r\n                        <li><NavLink  to=\"/messages\">Messages</NavLink></li>\r\n                    </ul>\r\n                    <Icon name={'times'} onClick={() => setToggleMenu(false)}/>\r\n                </div>}\r\n                <ul>\r\n                    <li><NavLink  to=\"/\"><Icon name={'home'}/><br/>Home</NavLink ></li>\r\n                    <li><NavLink  to=\"/companies\"><Icon name={'building'}/><br/>Companies</NavLink ></li>\r\n                    <li><NavLink  to=\"/projects\"><Icon name={'puzzle-piece'}/><br/>Progects</NavLink></li>\r\n                    <li><NavLink  to=\"/profiles\"><Icon name={'users'}/><br/>Profiles</NavLink></li>\r\n                    <li><NavLink  to=\"/jobs\"><Icon name={'briefcase'}/><br/>Jobs</NavLink></li>\r\n                    <li><NavLink  to=\"/messages\"><Icon name={'envelope-o'}/><br/>Messages</NavLink></li>\r\n                </ul>\r\n                    <div id='toggleSettings' className={classesNav.toggleSettings} >\r\n                        <Fragment>\r\n                            <img id='userToggleImg'  src={(!props.myInfo.photos) ? noProfile : !props.myInfo.photos.small ?\r\n                                                        noProfile : props.myInfo.photos.small}  alt='user'/>\r\n                            <span className='userName'>{props.myInfo.fullName}</span>\r\n                            { props.toggleSettings && <DropSettings logOut={props.logOut}/>}\r\n                        </Fragment>\r\n                    </div>\r\n            </nav>\r\n    );\r\n};\r\nexport default Navigation;","import { auth } from './authorizationReducers'\r\n\r\n/* variable */\r\nconst APP_SET_INITIALIZATION = 'APP/SET_INITIALIZATION';\r\nconst APP_AFTER_LOGOUT = 'APP/AFTER_LOGOUT';\r\n\r\n/*Action Creators */\r\nexport let initialization = () => {\r\n  return {type: APP_SET_INITIALIZATION };\r\n};\r\nexport let dischargeInit = () => {\r\n    return {type: APP_AFTER_LOGOUT};\r\n};\r\nexport const toInitialize = () => async (dispatch) => {\r\n       let promiseAuth = await dispatch(auth());\r\n       Promise.all([promiseAuth]).then(() => {\r\n           dispatch(initialization())\r\n       })\r\n}\r\n/* Initialization state*/\r\nlet initialState = {\r\n    initApp: false,\r\n};\r\n\r\n/*app reducers*/\r\nconst initializationRedusers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case APP_SET_INITIALIZATION: {\r\n      return {...state, initApp: true};\r\n    }\r\n    case APP_AFTER_LOGOUT: {\r\n      return {...state, initApp: false};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default initializationRedusers;","import {AuthApi} from \"../../apiDAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {dischargeInit} from \"./appRedusers\";\r\n\r\n/* variable */\r\nconst AUTH_SET_AUTHORIZATION = 'auth/SET_AUTHORIZATION';\r\nconst AUTH_LOGOUT = 'auth/LOGOUT';\r\nconst AUTH_SET_CAPTCHA = 'auth/SET_CAPTCHA';\r\n\r\n/*Action Creators */\r\nexport let setAuthorization = ({id, email, login}) => {\r\n  return {type: AUTH_SET_AUTHORIZATION, id, email, login };\r\n};\r\nexport let afterLogout = () => {\r\n    return {type: AUTH_LOGOUT };\r\n};\r\nexport const setCaptcha = (url) => {\r\n    return {\r\n        type: AUTH_SET_CAPTCHA, url\r\n    }\r\n}\r\n/*redux thunk*/\r\nexport const auth = () => async (dispatch) => {\r\n    const response = await AuthApi.authMe();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthorization(response.data.data))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await AuthApi.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0){\r\n        dispatch(auth())\r\n    }else if(response.data.resultCode === 10){\r\n        AuthApi.getCapthaUrl().then((response) =>{\r\n            dispatch(setCaptcha(response.data.url))\r\n        })\r\n    }else {\r\n        let massage = response.data.messages.length ? response.data.messages[0] : 'Some Error;'\r\n        dispatch(stopSubmit('sign in form', {_error: massage}));\r\n    }\r\n}\r\nexport const logOut = () => (dispatch) => {\r\n    AuthApi.logout().then( () => {\r\n        dispatch(afterLogout());\r\n        dispatch(dischargeInit());\r\n    });\r\n}\r\n\r\n/* Initialization state*/\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\n/*authorization reducers*/\r\nconst authorizationReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_SET_AUTHORIZATION: {\r\n      return {...state, ...action, isAuth: true};\r\n    }\r\n      case AUTH_LOGOUT: {\r\n          return {...state, id:null, email: null, login: null,  isAuth: false};\r\n      }\r\n      case AUTH_SET_CAPTCHA: {\r\n          return {\r\n              ...state, captcha: action.url\r\n          }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authorizationReducers;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Navigation from './Navigation'\r\nimport { logOut } from '../../../redux/reducers/authorizationReducers'\r\nimport { compose } from 'redux'\r\nimport { AuthRedirect } from '../../../HOC/authRedirect'\r\nimport { getMyInfo } from '../../../redux/selectors/selectors'\r\n\r\nclass NavigationContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navigation toggleSettings={this.props.toggleSettings}\r\n                        myInfo={this.props.myInfo}\r\n                        logOut={this.props.logOut}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myInfo: getMyInfo(state),\r\n    };\r\n}\r\nexport default compose( connect(mapStateToProps, { logOut }),\r\n    AuthRedirect\r\n    )(NavigationContainer);\r\n","import React from 'react';\r\nimport LogoSearch from './logoSearch/LogoSearch';\r\nimport classesHeader from './Header.module.css';\r\nimport NavigationContainer from \"./navigation/NavigationContainer\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={classesHeader.header}>\r\n            <div className={classesHeader.wrapper}>\r\n                <LogoSearch />\r\n                <NavigationContainer toggleSettings={props.toggleSettings}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport classesCompanies from './Companies.module.css';\r\n\r\nconst Companies = () => {\r\n    return(\r\n        <div className={classesCompanies.companies}>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Companies;","import React from 'react';\r\nimport classesProjects from './Projects.module.css';\r\n\r\nconst Projects = () => {\r\n    return(\r\n        <div className={classesProjects.projects}/>\r\n    );\r\n};\r\nexport default Projects;","import {UsersApi} from \"../../apiDAL/api\";\r\n\r\n/* variable */\r\nconst USERS_FOLLOW_USERS = 'USERS/FOLLOW_USERS';\r\nconst USERS_UN_FOLLOW_USERS = 'USERS/UN_FOLLOW_USERS';\r\nconst USERS_HIRE = 'USERS/HIRE';\r\nconst USERS_SET_USERS = 'USERS/SET_USERS';\r\nconst USERS_SET_TOTAL_USER_COUNT = 'USERS/SET_TOTAL_USER_COUNT';\r\nconst USERS_SET_CURRENT_USER_PAGE = 'USERS/SET_CURRENT_USER_PAGE';\r\nconst USERS_IS_FETCHING = 'USERS/IS_FETCHING';\r\nconst USERS_IS_FOLLOWING_PROGRESS = 'USERS/IS_FOLLOWING_PROGRESS';\r\n\r\n/*Action Creators */\r\nexport let followUser = (userId) => {\r\n    return {type: USERS_FOLLOW_USERS, userId};\r\n};\r\nexport let unFollowUser = (userId) => {\r\n    return {type: USERS_UN_FOLLOW_USERS, userId};\r\n};\r\nexport let hireUser = (userId) => {\r\n    return {type: USERS_HIRE, userId};\r\n};\r\nexport let setUsers = (users) => {\r\n    return{type: USERS_SET_USERS, users}\r\n}\r\nexport let setUsersTotalCount = (totalCount) =>{\r\n    return {\r\n        type: USERS_SET_TOTAL_USER_COUNT, totalCount\r\n    }\r\n}\r\nexport let setCurrentUserPage = (currentPage) => {\r\n    return{ type: USERS_SET_CURRENT_USER_PAGE, currentPage }\r\n}\r\nexport let isFetchingChange = (boolean) => {\r\n    return{ type: USERS_IS_FETCHING, isFetching: boolean }\r\n}\r\nexport let followingProgress = (boolean, userId) => {\r\n    return{ type: USERS_IS_FOLLOWING_PROGRESS, boolean, userId }\r\n}\r\n\r\n/* Initialization state*/\r\n\r\nlet initialState = {\r\n    users: [  ],\r\n    pageSize: 12,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n/* thunk creator*/\r\nexport const getUsers = (pageSize, currentPage) => {\r\n    return (dispatch) => {\r\n        dispatch(isFetchingChange(true));\r\n        UsersApi.getUsers(pageSize, currentPage).then(response => {\r\n                dispatch(isFetchingChange(false));\r\n                dispatch(setUsersTotalCount(response.data.totalCount));\r\n                dispatch(setUsers(response.data.items));\r\n            })\r\n    }\r\n}\r\n const foolowUnfollowSacces = (userId, ApiMethod, actionOfFollowed) => {\r\n    return (dispatch) =>{\r\n        dispatch(followingProgress(true, userId));\r\n        ApiMethod(userId).then( data => {\r\n            if (data.resultCode === 0)\r\n                dispatch(actionOfFollowed(userId))\r\n            dispatch(followingProgress(false, userId));\r\n        })\r\n    }\r\n }\r\nexport const follow = (userId) => {\r\n    return  foolowUnfollowSacces(userId, UsersApi.Follow, followUser)\r\n    /*\r\n    return (dispatch) => {\r\n        dispatch(followingProgress(true, userId));\r\n        UsersApi.Follow(userId).then( data => { if(data.resultCode === 0) dispatch(followUser(userId))\r\n                dispatch(followingProgress(false, userId));\r\n            })\r\n        }*/\r\n    }\r\nexport const unFollow = (userId) => {\r\n    return  foolowUnfollowSacces(userId, UsersApi.unFollow, unFollowUser)\r\n\r\n    /*return (dispatch) => {\r\n        dispatch(followingProgress(true, userId));\r\n        UsersApi.unFollow(userId).then( data => { if(data.resultCode === 0) dispatch(unFollowUser(userId))\r\n                dispatch(followingProgress(false, userId));\r\n            })\r\n    }*/\r\n}\r\n\r\n/*user reducers*/\r\nconst usersReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case USERS_FOLLOW_USERS: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(us => {\r\n                    if (us.id === action.userId) {\r\n                        return {...us, followed: true}\r\n                    }\r\n                    return us;\r\n                })\r\n            }\r\n        }\r\n        case USERS_UN_FOLLOW_USERS: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(us => {\r\n                    if (us.id === action.userId) {\r\n                        return {...us, followed: false}\r\n                    }\r\n                    return us;\r\n                })\r\n            }\r\n        }\r\n        case USERS_HIRE: {\r\n            return {...state, hire: true};\r\n        }\r\n        case USERS_SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case USERS_SET_TOTAL_USER_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case USERS_SET_CURRENT_USER_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case USERS_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case USERS_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.boolean ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => {return id !== action.userId}),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default usersReducers;","import React from \"react\";\r\nimport classesUser from './User.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Icon from '../../../reusable components/icon/Icon'\r\nimport addressImg from './../../../../assets/img/no-profile.png';\r\n\r\n\r\nconst User = ({user, followingInProgress, unFollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classesUser.container}>\r\n                <div className={classesUser.main}>\r\n                    <div>\r\n                        <NavLink to={`/user-profile/${user.id}`}>\r\n                            <img src={user.photos.small != null ? user.photos.small :\r\n                                addressImg} alt={user.id}/>\r\n                        </NavLink>\r\n                        <h3>{user.name}</h3>\r\n                        <h4>React Developer</h4>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed ? <button\r\n                                disabled={followingInProgress.some(id => { return  id === user.id})}\r\n                                className={classesUser.follow}\r\n                                   onClick={() => { unFollow(user.id)}}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => {return  id === user.id})}\r\n                                      className={classesUser.follow}\r\n                                      onClick={() => { follow(user.id) }}>Follow</button> }\r\n                        <button className={classesUser.mail}>\r\n                            <Icon name={'envelope-o'}/>\r\n                            </button>\r\n                        <button className={classesUser.hire}>Hire</button>\r\n                    </div>\r\n                </div>\r\n                <div className={classesUser.view}>\r\n                    <button className={classesUser.viewProfile}>View Profile</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React, { useState } from 'react'\r\nimport classesPagination from './Pagination.module.css'\r\n\r\nconst Pagination = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n        const [portionNumber, setPortionNumber] = useState(1)\r\n        let portionSize = 10;\r\n        let itemCount = Math.ceil(totalUsersCount / pageSize);\r\n        let portionCount = Math.ceil(itemCount / portionSize);\r\n        let leftPortionBorder = (portionNumber - 1) * portionSize +1;\r\n        let rightPortionBorder = portionNumber * portionSize;\r\n        let pages = [];\r\n        for (let i = 1; i <= itemCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        const prevPortion = () => {\r\n            setPortionNumber(portionNumber - 1);\r\n        }\r\n        const nextPortion = () => {\r\n            setPortionNumber(portionNumber + 1);\r\n        }\r\n\r\n        return (\r\n\r\n                <div className={classesPagination.pagination}>\r\n                    { portionNumber > 1 && <span onClick={prevPortion}\r\n                                                   className={classesPagination.arrowButton}> prev</span>}\r\n                    {\r\n                        pages.filter(p => (p<=rightPortionBorder && p>=leftPortionBorder) ).map(p => (<span className={currentPage === p && classesPagination.currentUserPage}\r\n                                              onClick={() => {\r\n                                                  onPageChanged(p)\r\n                                              }}>{p}</span>))\r\n                    }\r\n                    { portionNumber < portionCount && <span onClick={nextPortion}\r\n                                                              className={classesPagination.arrowButton}> next</span>}\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  follow,\r\n  followingProgress,\r\n  getUsers,\r\n  hireUser,\r\n  setCurrentUserPage,\r\n  unFollow\r\n} from '../../../../redux/reducers/usersReducers'\r\nimport User from './User'\r\nimport classesUsers from './Users.module.css'\r\nimport Preloader from '../../Parts/Preloader/Preloader'\r\nimport { AuthRedirect } from '../../../../HOC/authRedirect'\r\nimport { compose } from 'redux'\r\nimport Pagination from './pagination/Pagination'\r\n\r\nclass UsersClass extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.totalUsersCount = props.totalUsersCount\r\n    this.pageSize = props.pageSize\r\n    this.currentPage = props.currentPage\r\n    this.isFetching = props.isFetching\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.props.getUsers(this.pageSize, this.currentPage)\r\n  }\r\n\r\n  onPageChanged = (page) => {\r\n    this.props.setCurrentUserPage(page)\r\n    this.props.getUsers(this.pageSize, page)\r\n  }\r\n\r\n  render () {\r\n    let users = this.props.users.map((u) => (<User user={u}\r\n                                                   followingInProgress={this.props.followingInProgress}\r\n                                                   follow={this.props.follow}\r\n                                                   unFollow={this.props.unFollow}\r\n                                                   followingProgress={this.props.followingProgress}/>))\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {((this.props.isFetching) ? <Preloader/> : undefined)}\r\n        </div>\r\n        <Pagination totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}/>\r\n        <div className={classesUsers.users}>\r\n          {users}\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    pageSize: state.usersPage.pageSize,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress,\r\n  }\r\n}\r\nconst UsersContainer = compose(\r\n  connect(mapStateToProps, {\r\n    follow, unFollow, hireUser,\r\n    setCurrentUserPage, followingProgress, getUsers\r\n  }),\r\n  AuthRedirect)(UsersClass)\r\n\r\nexport default UsersContainer\r\n","import React from 'react';\r\nimport classesProfiles from './Profiles.module.css';\r\nimport UsersContainerAPI from \"./UsersContainerAPI\";\r\n\r\nconst Profiles = () => {\r\n    return(\r\n        <div className={classesProfiles.profile}>\r\n            <UsersContainerAPI/>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Profiles;","import React from 'react';\r\nimport classesJobs from './Jobs.module.css';\r\n\r\nconst Jobs = () => {\r\n    return(\r\n        <div className={classesJobs.jobs}/>\r\n    );\r\n};\r\nexport default Jobs;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './TabBarNav.css';\r\n\r\nconst TabBarNav = ({ navLabel, className, onChangeActiveTab }) => {\r\n    const classes = classNames(\r\n        className,\r\n        'nav-item',\r\n    );\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className={classes}\r\n            onClick={() => { onChangeActiveTab(navLabel); }}\r\n        >\r\n            {navLabel}\r\n        </button>\r\n    );\r\n};\r\n\r\nTabBarNav.propTypes = {\r\n    navLabel: PropTypes.string,\r\n    className: PropTypes.string,\r\n    onChangeActiveTab: PropTypes.func,\r\n};\r\n\r\nTabBarNav.defaultProps = {\r\n    navLabel: 'Tab',\r\n    className: '',\r\n    onChangeActiveTab: () => {},\r\n};\r\n\r\nexport default TabBarNav;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport TabBarNav from './TabBarNav';\r\n\r\nimport './TabBar.css';\r\n\r\nclass TabBar extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.node,\r\n        className: PropTypes.string,\r\n        vertical: PropTypes.bool,\r\n    };\r\n\r\n    static defaultProps = {\r\n        children: null,\r\n        className: '',\r\n        vertical: false,\r\n    };\r\n\r\n    state = {\r\n        activeTab: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { children = [] } = this.props;\r\n\r\n        const activeTab = this.getChildrenLabels(children)[0];\r\n\r\n        this.setActiveTab(activeTab);\r\n    }\r\n\r\n    getChildrenLabels = children => children.map(({ props }) => props.label)\r\n\r\n    setActiveTab = activeTab => {\r\n        const { activeTab: currentTab } = this.state;\r\n\r\n        if (currentTab !== activeTab) {\r\n            this.setState({\r\n                activeTab,\r\n            });\r\n        }\r\n    }\r\n\r\n    renderTabs = () => {\r\n        const { children = [] } = this.props;\r\n        const { activeTab } = this.state;\r\n\r\n        return this.getChildrenLabels(children).map(navLabel => (\r\n            <TabBarNav\r\n                key={navLabel}\r\n                navLabel={navLabel}\r\n                className={classNames({ active: activeTab === navLabel })}\r\n                onChangeActiveTab={this.setActiveTab}\r\n            />\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        const { activeTab } = this.state;\r\n        const {\r\n            children, className, vertical, ...attrs\r\n        } = this.props;\r\n\r\n        const classes = classNames(\r\n            'tab-bar',\r\n            className,\r\n            { vertical },\r\n        );\r\n\r\n        return (\r\n            <div className={classes} {...attrs}>\r\n                <div className=\"tab-bar-nav\">\r\n                    {this.renderTabs()}\r\n                </div>\r\n                <div className=\"tab-container\">\r\n                    {React.Children.map(children, child => React.cloneElement(child, { activeTab }))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './TabBarItem.css';\r\n\r\nconst TabBarItem = ({\r\n                        children, label, activeTab, ...attrs\r\n                    }) => {\r\n    const classes = classNames(\r\n        'tab-bar-item',\r\n        { active: activeTab === label },\r\n    );\r\n\r\n    return (\r\n        <div className={classes} {...attrs}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nTabBarItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n    activeTab: PropTypes.string,\r\n};\r\n\r\nTabBarItem.defaultProps = {\r\n    children: null,\r\n    activeTab: '',\r\n};\r\n\r\nexport default TabBarItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.css';\r\nimport classNames from 'classnames';\r\n\r\nconst Button = ({className, children, onClick, disabled, active, ...attr}) => {\r\n\r\n  let styles = classNames(\r\n    'btn',\r\n    {active},\r\n    className\r\n  )\r\n  const Tag = attr.href ? 'a' : 'button';\r\n  return(\r\n    <Tag className={styles} onClick={onClick} disabled={disabled} active={active.toString()} {...attr}>{children}</Tag>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  active: PropTypes.bool,\r\n};\r\nButton.defaultProps = {\r\n  children: 'Button',\r\n  className: '',\r\n  active: false,\r\n};\r\n\r\nexport default Button;\r\n\r\n","import React from \"react\";\r\nimport Input from \"../../../../reusable components/input/Input\";\r\nimport Button from \"../../../../reusable components/button/Button\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength8, required} from \"../../../../../tools/validators/validate\";\r\nimport {Checkbox} from \"../../../../reusable components/checkbox/Checkbox\";\r\nimport './LoginFormContainer.css';\r\n\r\nconst LoginForm = (props) => {\r\n    const {handleSubmit, captchaUrl} = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {props.error && <div className='commonError'><span>{props.error}</span></div>}\r\n            <Field id='email'\r\n                   name=\"email\"\r\n                   type=\"email\"\r\n                   component={Input}\r\n                   validate={[required]}\r\n                   placeholder={'Enter your email...'}\r\n            />\r\n            <Field\r\n                id='password'\r\n                name=\"password\"\r\n                type=\"password\"\r\n                component={Input}\r\n                validate={[required]}\r\n                placeholder={'Enter your password...'}\r\n            />\r\n            <Field id='rememberMe'\r\n                   name=\"rememberMe\"\r\n                   label='Remember me'\r\n                   component={Checkbox}\r\n                   type=\"checkbox\"\r\n                   value=\"rememberMe\"/>\r\n            {captchaUrl && <div className='captchaField'>\r\n                <img src={captchaUrl} alt=\"captcha\"/>\r\n                <Field id='captcha'\r\n                       name=\"captcha\"\r\n                       type=\"text\"\r\n                       component={Input}\r\n                       validate={[maxLength8]}/>\r\n            </div>}\r\n            <Button active>Sing In</Button>\r\n        </form>\r\n    );\r\n};\r\nconst LoginFormRedux = reduxForm({\r\n    form: 'sign in form'\r\n})(LoginForm);\r\n\r\nexport default LoginFormRedux;","import React, { Fragment } from 'react'\r\nimport LoginFormRedux from './LoginForm'\r\nimport { login } from '../../../../../redux/reducers/authorizationReducers'\r\nimport { connect } from 'react-redux'\r\nimport { getCaptchaSelec } from '../../../../../redux/selectors/selectors'\r\n\r\nconst LoginFormContainer = ({login, captchaUrl}) => {\r\n\r\n     let onSubmitForm = ({email, password, rememberMe, captcha}) => {\r\n        /*login(email, password, rememberMe, captcha);*/\r\n       console.log(email, password, rememberMe, captcha);\r\n       login(email, password, rememberMe, captcha);\r\n    }\r\n\r\n        return (\r\n            <Fragment>\r\n                <h3 className='loginForm'>Sign In</h3>\r\n                <LoginFormRedux captchaUrl={captchaUrl} onSubmit={onSubmitForm}/>\r\n                {/*<LoginResourses/>*/}\r\n            </Fragment>\r\n        );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      captchaUrl: getCaptchaSelec(state),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {login})(LoginFormContainer);","import React, {Fragment} from \"react\";\r\nimport './SignUpForm.css';\r\n\r\nconst LoginOutForm = (props) => {\r\n    return(\r\n        <Fragment>\r\n            <h3 className='signUpFrom'>Sing up</h3>\r\n            <p className='notSupported'>NOT SUPPORTED by API SERVICE</p>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default LoginOutForm;","import React, {Fragment} from \"react\";\r\nimport TabBar from \"../../reusable components/tabBar/TabBar\";\r\nimport TabBarItem from \"../../reusable components/tabBar/TabBarItem\";\r\nimport LoginFormContainer from \"./LoginPage/loginForm/LoginFormContainer\";\r\nimport SignUpForm from \"./LoginPage/logOutForm/SignUpForm\";\r\n\r\nconst Login = ({captchaUrl}) => {\r\n    return (\r\n        <Fragment>\r\n            <TabBar>\r\n                <TabBarItem label=\"Sign in\">\r\n                    <LoginFormContainer/>\r\n                </TabBarItem>\r\n                <TabBarItem label=\"Sign up\">\r\n                    <SignUpForm/>\r\n                </TabBarItem>\r\n            </TabBar>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n\r\n","import React from 'react'\r\nimport classLoginPage from './LoginPage.module.css'\r\nimport Login from '../Login'\r\n\r\nconst LoginPage = ({captchaUrl}) => {\r\n    return (\r\n            <div className={classLoginPage.container}>\r\n                <div className={classLoginPage.mainField}>\r\n                    <div className={classLoginPage.article}>\r\n                        <div className={classLoginPage.logo}>\r\n                            <p className={classLoginPage.logoDescription}>Job&nbsp;<span>|</span>&nbsp;Offer</p>\r\n                            <p className={classLoginPage.info}>JobOffer, is a global freelancing platform and social networking where businesses and\r\n                                independent professionals connect and collaborate remotely</p>\r\n                        </div>\r\n                        <div className={classLoginPage.bannerImg}>\r\n                            <img src=\"http://gambolthemes.net/workwise-new/images/cm-main-img.png\" alt=\"img\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classLoginPage.loginField}>\r\n                        <Login/>\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n    )\r\n};\r\nexport default LoginPage;","import React from 'react'\r\nimport { auth } from '../../../redux/reducers/authorizationReducers'\r\nimport { connect } from 'react-redux'\r\nimport LoginPage from '../loginPageContainer/LoginPage/LoginPage'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { getIsAuth } from '../../../redux/selectors/selectors'\r\n\r\nclass AuthMeContainer extends React.Component {\r\n  componentDidMount () {\r\n    this.props.auth();\r\n  }\r\n componentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n }\r\n\r\n  render () {\r\n    if(this.props.isAuth) {\r\n      return <Redirect to='/'/>\r\n    }\r\n    return <LoginPage/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: getIsAuth(state),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {auth})(AuthMeContainer);","import React from 'react';\r\nimport AuthMeContainer from './AuthMeContainer/AuthMeContainer'\r\n\r\nconst AuthMe = () => {\r\n  return(\r\n    <AuthMeContainer/>\r\n  );\r\n}\r\n\r\nexport default AuthMe;","import React, { Suspense } from 'react'\r\nimport './App.css'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport Header from './components/Header/Header'\r\n/*import Home from './components/Content/contentElem/Home/Home'*/\r\nimport Companies from './components/Content/contentElem/Companies/Companies'\r\nimport Projects from './components/Content/contentElem/Projects/Projects'\r\nimport Profiles from './components/Content/contentElem/Profiles/Profiles'\r\nimport Jobs from './components/Content/contentElem/Jobs/Jobs'\r\n/*import Mass from './components/Content/contentElem/Messages/Mass'*/\r\n/*import UserProfile from './components/Content/contentElem/UserPersonalPage/UserProfile'*/\r\nimport AuthMe from './components/Auth/AuthMe'\r\nimport { connect } from 'react-redux'\r\nimport { toInitialize } from './redux/reducers/appRedusers'\r\nimport { compose } from 'redux'\r\nimport { gerInitApp, getIsAuth, getMyId } from './redux/selectors/selectors'\r\nimport Preloader from './components/Content/Parts/Preloader/Preloader'\r\nimport { indificateMe } from './redux/reducers/myProfileReducers'\r\nimport { auth } from './redux/reducers/authorizationReducers'\r\n\r\n/*lazy loading*/\r\nconst Mass = React.lazy(() => import('./components/Content/contentElem/Messages/Mass'));\r\nconst UserProfile = React.lazy(() => import('./components/Content/contentElem/UserPersonalPage/UserProfile'));\r\nconst Home = React.lazy(() => import('./components/Content/contentElem/Home/Home'));\r\n\r\nclass App extends React.PureComponent {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.toInitialize = this.props.toInitialize\r\n    this.state = {toggleSettings: false}\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.toInitialize()\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (prevProps.initApp !== this.props.initApp) this.props.indificateMe(this.props.myId)\r\n    if (prevProps.isAuth !== this.props.isAuth) {\r\n\r\n    }\r\n  }\r\n\r\n  setToggleSettings = (target) => {\r\n    if (target.id !== 'toggleSettings' && this.state.toggleSettings === true) {\r\n      this.setState({toggleSettings: false})\r\n    } else if (target.id === 'toggleSettings' || target.className === 'userName' || target.id === 'userToggleImg') {\r\n      this.setState({\r\n        toggleSettings: !this.state.toggleSettings\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if (!this.props.initApp && !this.props.isAuth) {\r\n      return <AuthMe/>\r\n    }\r\n    if (!this.props.initApp) {\r\n      return <Preloader/>\r\n    }\r\n    return (\r\n      <HashRouter>\r\n        <div className={'App'} onClick={({target}) => {this.setToggleSettings(target) }}>\r\n          <Route path='/login' exact><AuthMe/></Route>\r\n          <Header toggleSettings={this.state.toggleSettings}/>\r\n          <div className='content'>\r\n            <Switch>\r\n              <>\r\n                <Route path='/' exact>\r\n                  <Suspense fallback={<Preloader/>}><Home/>\r\n                  </Suspense>\r\n                </Route>\r\n                <Route path='/companies'><Companies/></Route>\r\n                <Route path='/projects'><Projects/></Route>\r\n                <Route path='/profiles'><Profiles/></Route>\r\n                <Route path='/jobs'><Jobs/></Route>\r\n                <Route path='/messages'>\r\n                  <Suspense fallback={<Preloader/>}>\r\n                    <Mass/>\r\n                  </Suspense></Route>\r\n                <Route path='/user-profile/:userId?'>\r\n                  <Suspense fallback={<Preloader/>}>\r\n                    <UserProfile/>\r\n                  </Suspense>\r\n                </Route>\r\n              </>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    initApp: gerInitApp(state),\r\n    myId: getMyId(state),\r\n    isAuth: getIsAuth(state),\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps, {auth, toInitialize, indificateMe}))(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport messagesReducers from \"./reducers/messagesReducers\";\r\nimport profileReducers from \"./reducers/profileReducers\";\r\nimport usersReducers from \"./reducers/usersReducers\";\r\nimport userProfileReducers from \"./reducers/userProfileReducers/userProfileReducers\";\r\nimport Immutable from 'immutable';\r\nimport authorizationReducers from './reducers/authorizationReducers';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport myProfileReducers from \"./reducers/myProfileReducers\";\r\nimport appRedusers from \"./reducers/appRedusers\";\r\n\r\nconst composeEnhancers = typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ !== 'undefined' ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        serialize: {\r\n            immutable: Immutable\r\n        }\r\n    }) : compose;\r\n\r\nlet reducers = combineReducers({\r\n    appInit: appRedusers,\r\n    profilePage: profileReducers,\r\n    messagePage: messagesReducers,\r\n    usersPage: usersReducers,\r\n    user: userProfileReducers,\r\n    auth: authorizationReducers,\r\n    form: formReducer,\r\n    myInfo: myProfileReducers,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","import './index.css'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport store from './redux/rudux-store'\r\nimport { Provider } from 'react-redux'\r\n\r\nexport const MainApp = () => {\r\n  return (\r\n      <Provider store={store}>\r\n        <React.StrictMode>\r\n          <App/>\r\n        </React.StrictMode>\r\n      </Provider>\r\n  );\r\n};\r\nlet rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <MainApp/>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\nrerenderEntireTree();\r\nstore.subscribe(() => {\r\n    rerenderEntireTree();\r\n})\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"User_pagination__3FbFD\",\"currentUserPage\":\"User_currentUserPage__3RjLr\",\"container\":\"User_container__12-rq\",\"main\":\"User_main__1KPyV\",\"follow\":\"User_follow__kUIiw\",\"mail\":\"User_mail__HKSVN\",\"hire\":\"User_hire__1gA2R\",\"view\":\"User_view__3Gwgp\",\"viewProfile\":\"User_viewProfile__3w76H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__2g_RL\",\"mainField\":\"LoginPage_mainField__3J8yi\",\"article\":\"LoginPage_article__3yJ-O\",\"logo\":\"LoginPage_logo__1jrxD\",\"logoDescription\":\"LoginPage_logoDescription__RyAfI\",\"info\":\"LoginPage_info__2CBzc\",\"bannerImg\":\"LoginPage_bannerImg__3ND7A\",\"loginField\":\"LoginPage_loginField__3mghc\",\"containerFooter\":\"LoginPage_containerFooter__2JoMF\"};","import React from \"react\";\r\nimport classesPreloader from './classesPreloader.module.css';\r\nimport spinner from './../../../../assets/img/Spinner-1s-304px.png';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={classesPreloader.preloader}>\r\n           <img src={spinner} alt={'spinner'}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","module.exports = __webpack_public_path__ + \"static/media/no-profile.2d49d567.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1Q4f1\",\"shotToggleMenu\":\"Navigation_shotToggleMenu__1CRPs\",\"toggleBtn\":\"Navigation_toggleBtn__gBZO7\",\"toggleSettings\":\"Navigation_toggleSettings__2JgGx\",\"activeLink\":\"Navigation_activeLink__SL6M5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__s09q1\",\"currentUserPage\":\"Pagination_currentUserPage__3IKqH\",\"arrowButton\":\"Pagination_arrowButton__2ubQw\"};","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapSateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class WithRedirection extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapSateToProps,{})(WithRedirection);\r\n}","import {ProfileApi} from \"../../apiDAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n/* constants */\r\nconst PROFILE_SET_ME = 'PROFILE/SET_ME';\r\nconst PROFILE_UPLOAD_PHOTO = 'PROFILE/UPLOAD_PHOTO';\r\n\r\n/* Action creators*/\r\nexport let SetMe = (myInfo) => {\r\n    return{\r\n        type: PROFILE_SET_ME, myInfo\r\n    }\r\n}\r\nexport const ChangePhoto = (photos) => {\r\n    return {\r\n        type: PROFILE_UPLOAD_PHOTO, photos\r\n    }\r\n}\r\n/* redux thunk*/\r\nexport const indificateMe = (userID) => (dispatch) => {\r\n    ProfileApi.getProfile(userID).then(\r\n        response => dispatch(SetMe(response.data))\r\n    )\r\n}\r\nexport const updatePhoto = (photoFile) => async (dispatch) => {\r\n     const response = await ProfileApi.uploadPhoto(photoFile);\r\n            if(response.data.resultCode === 0 ) dispatch(ChangePhoto(response.data.data.photos))\r\n\r\n};\r\nexport const updateDataProfile = (profile) => async (dispatch, getState) => {\r\n    let userId = getState().auth.id;\r\n    let response = await ProfileApi.editDataProfile(profile);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(indificateMe(userId))\r\n    }else {\r\n        let massage = response.data.messages.length ? response.data.messages[0] : 'Some Error;'\r\n        dispatch(stopSubmit('Profile Data', {_error: massage}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n/* initialState */\r\nlet initialState = {\r\n\r\n}\r\n/* reducer*/\r\nconst myProfileReducers = (state= initialState, action) =>{\r\n    switch (action.type) {\r\n        case PROFILE_SET_ME: {\r\n            return{\r\n                ...state, ...action.myInfo,\r\n            }\r\n        }\r\n        case PROFILE_UPLOAD_PHOTO: {\r\n            return{\r\n                ...state, photos : action.photos,\r\n            }\r\n        }\r\n        default:\r\n        {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport default myProfileReducers;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Input.css';\r\n\r\nconst Input = ({\r\n                  name, id, className, input,label, meta: {error, touched}, ...attrs\r\n               }) => {\r\n\r\n    let classes;\r\n    classes = classNames(\r\n        'input',\r\n        className,\r\n    );\r\n\r\n    return (\r\n        <div className=\"inputWrapper\">\r\n            {label ? <label htmlFor={id}>{label}</label> : null }\r\n            {touched && error && <span className=\"inputError\">{error}</span>}\r\n            <input type={name}\r\n                id={id}\r\n                className={classes + error && 'error'}\r\n                {...input}\r\n                {...attrs}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string,\r\n    id: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n    label: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n    name: 'text',\r\n    className: '',\r\n    label: null,\r\n    error: null,\r\n};\r\n\r\nexport default Input;","\r\nexport const required = value => (value  ? undefined : 'Field is Required')\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\nexport const maxLength100 = maxLength(100)\r\nexport const maxLength8 = maxLength(8)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAccountSett\":\"DropSettings_userAccountSett__PaB--\",\"usLinks\":\"DropSettings_usLinks__pLWhd\",\"logout\":\"DropSettings_logout__3ryWH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoSearch\":\"LogoSearch_logoSearch__2I1QS\",\"logoDescription\":\"LogoSearch_logoDescription__2AKVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__QENX6\",\"wrapper\":\"Header_wrapper__2bdHz\"};"],"sourceRoot":""}